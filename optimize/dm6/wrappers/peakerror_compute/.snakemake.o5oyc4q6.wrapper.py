
######## Snakemake header ########
import sys; sys.path.insert(0, "/data/Lei_student/Hussain/miniconda/envs/snakemake/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x06\x00\x00\x00outputq\x03csnakemake.io\nOutputFiles\nq\x04)\x81q\x05X\x9b\x00\x00\x00peakerror/macs2/sjl_kc_cp190_R1/q_value_0.027118644067806272/llocal_10000/slocal_1000/lowmfold_12/highmfold_30/no-nl/no-ds/chr3R/sjl_kc_cp190_R1_errors.tsvq\x06a}q\x07X\x06\x00\x00\x00_namesq\x08}q\tsbX\x07\x00\x00\x00threadsq\nK\x01X\x06\x00\x00\x00paramsq\x0bcsnakemake.io\nParams\nq\x0c)\x81q\r(X(\x00\x00\x00peakerror/labels/kc_suhw/chr3Rlabels.bedq\x0eX)\x00\x00\x00peakerror/labels/kc_cp190/chr3Rlabels.bedq\x0fe}q\x10(X\r\x00\x00\x00kc_suhwlabelsq\x11h\x0eh\x08}q\x12(h\x11K\x00N\x86q\x13X\x0e\x00\x00\x00kc_cp190labelsq\x14K\x01N\x86q\x15uh\x14h\x0fubX\x04\x00\x00\x00ruleq\x16X\x11\x00\x00\x00peakerror_computeq\x17X\x03\x00\x00\x00logq\x18csnakemake.io\nLog\nq\x19)\x81q\x1a}q\x1bh\x08}q\x1csbX\x05\x00\x00\x00inputq\x1dcsnakemake.io\nInputFiles\nq\x1e)\x81q\x1fX\xac\x00\x00\x00peak_out/macs2/sjl_kc_cp190_R1/q_value_0.027118644067806272/llocal_10000/slocal_1000/lowmfold_12/highmfold_30/no-nl/no-ds/chr3R/sjl_kc_cp190_R1_peaks.broadPeak.threecolumnsq a}q!h\x08}q"sbX\t\x00\x00\x00wildcardsq#csnakemake.io\nWildcards\nq$)\x81q%(X\x02\x00\x00\x0030q&X\x05\x00\x00\x00chr3Rq\'X\x0f\x00\x00\x00sjl_kc_cp190_R1q(X\x04\x00\x00\x001000q)X\x02\x00\x00\x0012q*X\x05\x00\x00\x00no-nlq+X\x05\x00\x00\x0010000q,X\x05\x00\x00\x00no-dsq-X\x14\x00\x00\x000.027118644067806272q.e}q/(X\t\x00\x00\x00highmfoldq0h&X\x03\x00\x00\x00chrq1h\'X\x06\x00\x00\x00sampleq2h(X\x06\x00\x00\x00slocalq3h)X\x08\x00\x00\x00lowmfoldq4h*X\x08\x00\x00\x00nolambdaq5h+X\x06\x00\x00\x00llocalq6h,h\x08}q7(X\t\x00\x00\x00highmfoldq8K\x00N\x86q9X\x03\x00\x00\x00chrq:K\x01N\x86q;X\x06\x00\x00\x00sampleq<K\x02N\x86q=X\x06\x00\x00\x00slocalq>K\x03N\x86q?X\x08\x00\x00\x00lowmfoldq@K\x04N\x86qAX\x08\x00\x00\x00nolambdaqBK\x05N\x86qCX\x06\x00\x00\x00llocalqDK\x06N\x86qEX\n\x00\x00\x00downsampleqFK\x07N\x86qGX\x07\x00\x00\x00q_valueqHK\x08N\x86qIuX\n\x00\x00\x00downsampleqJh-X\x07\x00\x00\x00q_valueqKh.ubX\x06\x00\x00\x00configqL}qMX\t\x00\x00\x00resourcesqNcsnakemake.io\nResources\nqO)\x81qP(K\x01K\x01e}qQ(h\x08}qR(X\x06\x00\x00\x00_nodesqSK\x00N\x86qTX\x06\x00\x00\x00_coresqUK\x01N\x86qVuhSK\x01hUK\x01ubub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
from snakemake import shell

for sample in snakemake.input:
    if "kc_suhw" in sample:
        shell("Rscript peakerror/PeakError_compute.R {sample} {snakemake.params.kc_suhwlabels} > {snakemake.output}")
    elif "kc_cp190" in sample:
        shell("Rscript peakerror/PeakError_compute.R {sample} {snakemake.params.kc_cp190labels} > {snakemake.output}")
