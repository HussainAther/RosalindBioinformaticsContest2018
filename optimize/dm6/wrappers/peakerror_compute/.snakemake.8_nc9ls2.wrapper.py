
######## Snakemake header ########
import sys; sys.path.insert(0, "/data/Lei_student/Hussain/miniconda/envs/snakemake/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x03\x00\x00\x00logq\x03csnakemake.io\nLog\nq\x04)\x81q\x05}q\x06X\x06\x00\x00\x00_namesq\x07}q\x08sbX\x07\x00\x00\x00threadsq\tK\x01X\x06\x00\x00\x00paramsq\ncsnakemake.io\nParams\nq\x0b)\x81q\x0c(X)\x00\x00\x00peakerror/labels/kc_cp190/chr3Rlabels.bedq\rX(\x00\x00\x00peakerror/labels/kc_suhw/chr3Rlabels.bedq\x0ee}q\x0f(X\x0e\x00\x00\x00kc_cp190labelsq\x10h\rh\x07}q\x11(h\x10K\x00N\x86q\x12X\r\x00\x00\x00kc_suhwlabelsq\x13K\x01N\x86q\x14uh\x13h\x0eubX\t\x00\x00\x00resourcesq\x15csnakemake.io\nResources\nq\x16)\x81q\x17(K\x01K\x01e}q\x18(h\x07}q\x19(X\x06\x00\x00\x00_nodesq\x1aK\x00N\x86q\x1bX\x06\x00\x00\x00_coresq\x1cK\x01N\x86q\x1duh\x1aK\x01h\x1cK\x01ubX\t\x00\x00\x00wildcardsq\x1ecsnakemake.io\nWildcards\nq\x1f)\x81q (X\x05\x00\x00\x0010000q!X\x04\x00\x00\x002000q"X\x05\x00\x00\x00no-nlq#X\x14\x00\x00\x000.040677966101704405q$X\x05\x00\x00\x00chr3Rq%X\x0f\x00\x00\x00lm32_kc_suhw_R1q&X\x02\x00\x00\x0040q\'X\x02\x00\x00\x0012q(X\x02\x00\x00\x00dsq)e}q*(X\x06\x00\x00\x00llocalq+h!X\x06\x00\x00\x00slocalq,h"X\x08\x00\x00\x00nolambdaq-h#X\t\x00\x00\x00highmfoldq.h\'X\x07\x00\x00\x00q_valueq/h$X\x03\x00\x00\x00chrq0h%X\x06\x00\x00\x00sampleq1h&h\x07}q2(X\x06\x00\x00\x00llocalq3K\x00N\x86q4X\x06\x00\x00\x00slocalq5K\x01N\x86q6X\x08\x00\x00\x00nolambdaq7K\x02N\x86q8X\x07\x00\x00\x00q_valueq9K\x03N\x86q:X\x03\x00\x00\x00chrq;K\x04N\x86q<X\x06\x00\x00\x00sampleq=K\x05N\x86q>X\t\x00\x00\x00highmfoldq?K\x06N\x86q@X\x08\x00\x00\x00lowmfoldqAK\x07N\x86qBX\n\x00\x00\x00downsampleqCK\x08N\x86qDuX\x08\x00\x00\x00lowmfoldqEh(X\n\x00\x00\x00downsampleqFh)ubX\x05\x00\x00\x00inputqGcsnakemake.io\nInputFiles\nqH)\x81qIX\xa9\x00\x00\x00peak_out/macs2/lm32_kc_suhw_R1/q_value_0.040677966101704405/llocal_10000/slocal_2000/lowmfold_12/highmfold_40/no-nl/ds/chr3R/lm32_kc_suhw_R1_peaks.broadPeak.threecolumnsqJa}qKh\x07}qLsbX\x06\x00\x00\x00outputqMcsnakemake.io\nOutputFiles\nqN)\x81qOX\x98\x00\x00\x00peakerror/macs2/lm32_kc_suhw_R1/q_value_0.040677966101704405/llocal_10000/slocal_2000/lowmfold_12/highmfold_40/no-nl/ds/chr3R/lm32_kc_suhw_R1_errors.tsvqPa}qQh\x07}qRsbX\x06\x00\x00\x00configqS}qTX\x04\x00\x00\x00ruleqUX\x11\x00\x00\x00peakerror_computeqVub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
from snakemake import shell

for sample in snakemake.input:
    if "kc_suhw" in sample:
        shell("Rscript peakerror/PeakError_compute.R {sample} {snakemake.params.kc_suhwlabels} > {snakemake.output}")
    elif "kc_cp190" in sample:
        shell("Rscript peakerror/PeakError_compute.R {sample} {snakemake.params.kc_cp190labels} > {snakemake.output}")
