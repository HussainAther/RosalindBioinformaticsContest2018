
######## Snakemake header ########
import sys; sys.path.insert(0, "/data/Lei_student/Hussain/miniconda/envs/snakemake/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x06\x00\x00\x00outputq\x03csnakemake.io\nOutputFiles\nq\x04)\x81q\x05X\x9a\x00\x00\x00peakerror/macs2/lm32_kc_suhw_R1/q_value_0.027118644067806272/llocal_10000/slocal_2000/lowmfold_8/highmfold_30/no-nl/no-ds/chr3L/lm32_kc_suhw_R1_errors.tsvq\x06a}q\x07X\x06\x00\x00\x00_namesq\x08}q\tsbX\x03\x00\x00\x00logq\ncsnakemake.io\nLog\nq\x0b)\x81q\x0c}q\rh\x08}q\x0esbX\x06\x00\x00\x00paramsq\x0fcsnakemake.io\nParams\nq\x10)\x81q\x11(X(\x00\x00\x00peakerror/labels/kc_suhw/chr3Llabels.bedq\x12X)\x00\x00\x00peakerror/labels/kc_cp190/chr3Llabels.bedq\x13e}q\x14(X\r\x00\x00\x00kc_suhwlabelsq\x15h\x12h\x08}q\x16(h\x15K\x00N\x86q\x17X\x0e\x00\x00\x00kc_cp190labelsq\x18K\x01N\x86q\x19uh\x18h\x13ubX\x05\x00\x00\x00inputq\x1acsnakemake.io\nInputFiles\nq\x1b)\x81q\x1cX\xab\x00\x00\x00peak_out/macs2/lm32_kc_suhw_R1/q_value_0.027118644067806272/llocal_10000/slocal_2000/lowmfold_8/highmfold_30/no-nl/no-ds/chr3L/lm32_kc_suhw_R1_peaks.broadPeak.threecolumnsq\x1da}q\x1eh\x08}q\x1fsbX\x04\x00\x00\x00ruleq X\x11\x00\x00\x00peakerror_computeq!X\x06\x00\x00\x00configq"}q#X\x07\x00\x00\x00threadsq$K\x01X\t\x00\x00\x00wildcardsq%csnakemake.io\nWildcards\nq&)\x81q\'(X\x0f\x00\x00\x00lm32_kc_suhw_R1q(X\x14\x00\x00\x000.027118644067806272q)X\x05\x00\x00\x00no-dsq*X\x05\x00\x00\x00chr3Lq+X\x01\x00\x00\x008q,X\x05\x00\x00\x0010000q-X\x02\x00\x00\x0030q.X\x05\x00\x00\x00no-nlq/X\x04\x00\x00\x002000q0e}q1(X\x07\x00\x00\x00q_valueq2h)X\x08\x00\x00\x00nolambdaq3h/X\n\x00\x00\x00downsampleq4h*X\x03\x00\x00\x00chrq5h+X\x06\x00\x00\x00sampleq6h(X\x06\x00\x00\x00llocalq7h-X\t\x00\x00\x00highmfoldq8h.X\x08\x00\x00\x00lowmfoldq9h,h\x08}q:(X\x07\x00\x00\x00q_valueq;K\x01N\x86q<X\x08\x00\x00\x00nolambdaq=K\x07N\x86q>X\n\x00\x00\x00downsampleq?K\x02N\x86q@X\x03\x00\x00\x00chrqAK\x03N\x86qBX\x08\x00\x00\x00lowmfoldqCK\x04N\x86qDX\x06\x00\x00\x00llocalqEK\x05N\x86qFX\t\x00\x00\x00highmfoldqGK\x06N\x86qHX\x06\x00\x00\x00sampleqIK\x00N\x86qJX\x06\x00\x00\x00slocalqKK\x08N\x86qLuX\x06\x00\x00\x00slocalqMh0ubX\t\x00\x00\x00resourcesqNcsnakemake.io\nResources\nqO)\x81qP(K\x01K\x01e}qQ(h\x08}qR(X\x06\x00\x00\x00_nodesqSK\x00N\x86qTX\x06\x00\x00\x00_coresqUK\x01N\x86qVuhSK\x01hUK\x01ubub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
from snakemake import shell

for sample in snakemake.input:
    if "kc_suhw" in sample:
        shell("Rscript peakerror/PeakError_compute.R {sample} {snakemake.params.kc_suhwlabels} > {snakemake.output}")
    elif "kc_cp190" in sample:
        shell("Rscript peakerror/PeakError_compute.R {sample} {snakemake.params.kc_cp190labels} > {snakemake.output}")
